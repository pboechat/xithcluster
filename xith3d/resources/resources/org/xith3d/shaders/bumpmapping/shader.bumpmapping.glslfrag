uniform sampler2D mainTex;
uniform sampler2D normalTex;

varying vec3 lightDir;
varying vec3 viewDir;

const float specularFactor = 0.5;

void main()
{
    vec3 surfaceColor = vec3( texture2D( mainTex, gl_TexCoord[ 0 ].st ) );
    
    vec3 normDelta = normalize( texture2D( normalTex, gl_TexCoord[ 0 ].st ).xyz * 2.0 - 1.0 );
    vec3 litColor = surfaceColor * max( dot( normDelta, lightDir ), 0.0 );
    vec3 reflectDir = reflect( lightDir, normDelta );
    
    float spec = max( dot( viewDir, reflectDir ), 0.0 );
    spec = pow( spec, 6.0 );
    spec *= specularFactor;
    litColor = min( litColor + spec, vec3( 1.0 ) );
    
    gl_FragColor = vec4( litColor, 1.0 );
}
