attribute vec3 tangent; // The inverse tangent to the geometry
attribute vec3 bitangent; // The inverse bitangent to the geometry

varying vec3 lightDir;
varying vec3 viewDir;

void main()
{
    viewDir = vec3( gl_ModelViewMatrix * gl_Vertex );
    gl_Position = ftransform();
    gl_TexCoord[ 0 ] = gl_MultiTexCoord0;
    
    vec3 n = normalize( gl_NormalMatrix * gl_Normal );
    vec3 t = normalize( gl_NormalMatrix * tangent );
    //vec3 b = normalize( gl_NormalMatrix * bitangent );
    vec3 b = cross( n, t );
    
    vec3 vVertex = vec3( gl_ModelViewMatrix * gl_Vertex );
    vec3 tmpVec = gl_LightSource[ 0 ].position.xyz - vVertex;    
    
    vec3 v;
    v.x = dot( tmpVec, t );
    v.y = dot( tmpVec, b );
    v.z = dot( tmpVec, n );
    lightDir = normalize( v );
    
    v.x = dot( viewDir, t );
    v.y = dot( viewDir, b );
    v.z = dot( viewDir, n );
    viewDir = normalize( v );
}
